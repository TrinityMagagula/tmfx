// Firebase + Supabase Unified Realtime Script
import { initializeApp } from "https://www.gstatic.com/firebasejs/10.11.0/firebase-app.js";
import { getAuth, onAuthStateChanged } from "https://www.gstatic.com/firebasejs/10.11.0/firebase-auth.js";
import { createClient } from "https://cdn.jsdelivr.net/npm/@supabase/supabase-js/+esm";

// ✅ Firebase Config
const firebaseConfig = {
  apiKey: "AIzaSyBIRVXFCPBpepPUEZz9aAbF-oVICVxTsec",
  authDomain: "mt-trading-signup-and-log-in.firebaseapp.com",
  databaseURL: "https://mt-trading-signup-and-log-in-default-rtdb.firebaseio.com",
  projectId: "mt-trading-signup-and-log-in",
  storageBucket: "mt-trading-signup-and-log-in.appspot.com",
  messagingSenderId: "101302422584",
  appId: "1:101302422584:web:07d472b05e81a6930beacd"
};

// ✅ Supabase Config
const supabaseUrl = 'https://fepujhdzovzbygczdjxe.supabase.co';
const supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImZlcHVqaGR6b3Z6YnlnY3pkanhlIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDYwODE2MDUsImV4cCI6MjA2MTY1NzYwNX0.mVNDZaHTodnQQ3EGvUS3puaAfTKsiyRCSGldOo_wFmU';
const supabase = createClient(supabaseUrl, supabaseKey);

// ✅ Initialize Firebase
const app = initializeApp(firebaseConfig);
const auth = getAuth(app);

  // Utility function to get float value from an element by ID
  function getFloat(id) {
    const el = document.getElementById(id);
    if (!el) return 0;
    const val = parseFloat(el.textContent || el.value || "0");
    return isNaN(val) ? 0 : val;
  }

  // Main deposit function
  window.deposit = async function () {
    const depositAmount = getFloat('deposit-zar');
    if (depositAmount < 50) {
      alert("Minimum deposit is R50");
      return;
    }

    const openingBalance = getFloat('user-credits');
    const closingBalance = getFloat('user-balance');

    const user = auth.currentUser;

    if (!user) {
      alert("You must be logged in to make a deposit.");
      return;
    }

    const uid = user.uid;

    // Prepare data for insertion
    const newTransaction = {
      id: uid, // user's UID
      OpeningBalance: openingBalance,
      Amount: depositAmount,
      ClosingBalance: closingBalance,
      Quantity: 1,
      Type: "Deposit",
      ItemName: "Credits"
      // TransactionID is automatically generated by Supabase if defined as UUID default
    };

    // Insert into Supabase
    const { data, error } = await supabase
      .from("TransactionHistory")
      .insert([newTransaction]);

    if (error) {
      console.error("Deposit failed:", error.message);
      alert("Failed to create deposit transaction. Participating in Fraud Will lead to Legal actions");
    } else {
        alert("Deposit request submitted.");
        console.log("Transaction saved:", data);
        window.location.href = "joincompetition.html"; // redirect after OK
      }
  };




